@using ECommerce.Shared.Dto.User
@page "/user/register"
@inject IUserService UserService
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<EditForm Model="registerUserDto" OnValidSubmit="HandleUserRegister">
    <DataAnnotationsValidator />
    <div class="register-container">
        <h3 class="register-title">Create account</h3>
        <div class="register-input">
            <label for="email">Email address</label>
            <input @bind="registerUserDto.Email" type="email" class="register-field" id="email" placeholder="Enter email">
            <ValidationMessage For="@(()=>registerUserDto.Email)" />
        </div>
        <div class="register-input">
            <label for="password">Password</label>
            <input @bind="registerUserDto.Password" type="password" class="register-field" id="password" placeholder="Enter Password">
            <ValidationMessage For="@(()=>registerUserDto.Password)" />
        </div>
        <div class="register-input">
            <label for="name">Name</label>
            <input @bind="registerUserDto.Name" type="text" class="register-field" id="name" placeholder="Enter name">
            <ValidationMessage For="@(()=>registerUserDto.Name)" />
        </div>
        <button type="submit" class="register-button">Submit</button>
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="message">@message</div>
        }
    </div>
</EditForm>

@code {
    private RegisterUserDto registerUserDto = new RegisterUserDto();
    private string message = string.Empty;

    private async Task HandleUserRegister()
    {
        var response = await UserService.RegisterUserAsync(registerUserDto);
        if (response.Success)
        {
            message = response.Message;

            if (IsEmailInUse(registerUserDto.Email))
            {
                message = response.Message;

            }
            if (IsNameInUse(registerUserDto.Name))
            {
                message = response.Message;
            }
        }
        else
        {
            message = response.Message;
        }
    }

    private bool IsEmailInUse(string email)
    {
        return email == registerUserDto.Email;
    }

    private bool IsNameInUse(string name)
    {
        return name == registerUserDto.Name;
    }
}
