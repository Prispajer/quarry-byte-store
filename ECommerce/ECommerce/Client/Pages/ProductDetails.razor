@using ECommerce.Shared.Models.Product
@using ECommerce.Shared.Models.Cart
@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

<PageTitle>QuarryByte</PageTitle>

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="specific-product-container">
        <div class="specific-product-image">
            <img class="specific-product-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="specific-product-details">
            <div class="specific-product-info">
                <h2>@product.Title</h2>
                <p>@product.Description</p>
                <div class="specific-product-variant">
                    @if (product.Variants != null && product.Variants.Count > 1)
                    {
                        <div class="specific-product-variant-selector">
                            <select class="specific-product-form-select" @bind="currentTypeId">
                                @foreach (var variant in product.Variants)
                                {
                                    <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                }
                                }
                            </select>
                        </div>
                    }
                    @if (GetSelectedVariant() != null)
                    {
                        <div class="specific-product-pricing">
                            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                            {
                                <span class="specific-product-original-price">
                                    $@GetSelectedVariant().OriginalPrice
                                </span>
                            }
                            <h4 class="specific-product-price">
                                $@GetSelectedVariant().Price
                            </h4>
                        </div>
                    }
                </div>
            </div>
            <div class="specific-product-button">
                <button class="specific-product-buy-button" @onclick="AddToCart">
                    <span>Add to Cart</span>
                </button>
            </div>
        </div>
    </div>
}

@code {
    private Product? product = null;
    private string message = string.Empty;

    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading...";

        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                ProductTypeId = productVariant.ProductTypeId
            };

        await CartService.AddToCart(cartItem);
    }
}
