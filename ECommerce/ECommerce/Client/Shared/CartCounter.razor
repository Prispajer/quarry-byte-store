@inject ICartService CartService
@inject ISyncLocalStorageService LocalStorage
@implements IDisposable

<div class="icons-container">
    <button class="icon-option icon-toggle">
        <i class="oi oi-person"></i>
    </button>
    <a href="cart" class="icon-option">
        <img src="/cart.png" class="oi" />
        <span class="cart-counter">@GetCartItemsCount()</span>
    </a>
    <button class="icon-option icon-toggle">
        <i class="oi oi-magnifying-glass"></i>
    </button>
    <a href="login" class="auth-option header-hover">
        <span>Zaloguj</span>
    </a>
    <span class="vertical-line">|</span>
    <a href="register" class="auth-option header-hover">
        <span>Zarejestruj</span>
    </a>
</div>

@code {
    private int GetCartItemsCount()
    {
        var cart = LocalStorage.GetItem<List<CartItem>>("cart");
        return cart != null ? cart.Count : 0;
    }

    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }
}
